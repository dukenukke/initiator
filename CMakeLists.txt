# Generated Cmake Pico project file

cmake_minimum_required(VERSION 3.13)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Initialise pico_sdk from installed location
# (note this can come from environment, CMake cache etc)

# == DO NOT EDIT THE FOLLOWING LINES for the Raspberry Pi Pico VS Code Extension to work ==
if(WIN32)
    set(USERHOME $ENV{USERPROFILE})
else()
    set(USERHOME $ENV{HOME})
endif()
set(sdkVersion 2.1.0)
set(toolchainVersion 13_3_Rel1)
set(picotoolVersion 2.1.0)
set(picoVscode ${USERHOME}/.pico-sdk/cmake/pico-vscode.cmake)
if (EXISTS ${picoVscode})
    include(${picoVscode})
endif()
# ====================================================================================
set(PICO_BOARD pico CACHE STRING "Board type")

# Pull in Raspberry Pi Pico SDK (must be before project)
include(pico_sdk_import.cmake)
include(lib/FreeRTOS-Kernel/portable/ThirdParty/GCC/RP2040/FreeRTOS_Kernel_import.cmake)

project(initiator C CXX ASM)

include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}/lib/ws2812
    ${CMAKE_CURRENT_SOURCE_DIR}/src
)

# Initialise the Raspberry Pi Pico SDK
pico_sdk_init()

# Add executable. Default name is the project name, version 0.1

add_executable(initiator initiator.c)

file(MAKE_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/generated)

# generate the header file into the source tree as it is included in the RP2040 datasheet
pico_generate_pio_header(initiator ${CMAKE_CURRENT_LIST_DIR}/lib/ws2812/ws2812.pio OUTPUT_DIR ${CMAKE_CURRENT_LIST_DIR}/generated)

pico_set_program_name(initiator "initiator")
pico_set_program_version(initiator "0.1")

# Modify the below lines to enable/disable output over UART/USB
pico_enable_stdio_uart(initiator 0)
pico_enable_stdio_usb(initiator 1)

# Add the standard library to the build
target_link_libraries(initiator
        pico_stdlib
        )

target_sources(initiator PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}/initiator.c
    ${CMAKE_CURRENT_SOURCE_DIR}/lib/ws2812/ws2812_pio.c
    ${CMAKE_CURRENT_SOURCE_DIR}/src/vTask_led.c
    ${CMAKE_CURRENT_SOURCE_DIR}/src/vTask_adc.c
)

# Add the standard include files to the build
target_include_directories(initiator PRIVATE
  ${CMAKE_CURRENT_LIST_DIR}
)

# Add any user requested libraries
target_link_libraries(initiator 
        hardware_i2c
        hardware_adc
        hardware_pio
        hardware_pwm
        pico_multicore
        FreeRTOS-Kernel
        FreeRTOS-Kernel-Heap4
        )

pico_add_extra_outputs(initiator)

